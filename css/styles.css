* {
	box-sizing: border-box;
}
/* OKAY SO IN CSS --> THIS * WILL SELECT EVERYTHING!! UNIVERSAL SELECTOR
    ^^^ CODE IS CREATING A BORDER BOX AROUND EVERY ELEMENT
   */

:root {
	--primary-color: #6a0dad;
	--secondary-color: #0D98BA;
	--dark-grey: #2b2b2b;
	--black: #000;
	--white: #FFFFFF;
	--primary-font: 'Lato', sans-serif;
	--primary-font-weight: 400;
	--primary-font-size: 16px;
	--header-font-weight: 700;
	--button-table-pad: 40px;
}


/*
CSS variable defined by two ( -- )infront of name
SASS variable defined by ( $ ) before name
 Colors used

Text Color (Dark Gray): #2b2b2b;
 Color (Purple): #6a0dad;
2 Color (blue-green): #0D98BA

weird green: 357b70

 */

body {
	background-color: var(--secondary-color);
	font-family: var(--primary-font);
	font-weight: var(--primary-font-weight);
	font-size: var(--primary-font-size);
  	/* Sets the font size to 16px */
  	line-height: 1.6;
  	/* Sets the line-height to 1.6 */
}

h1 {
  font-size: 30px;
  font-weight: var(--header-font-weight);
  font-style: italic;
  color: var(--primary-color);
  text-decoration: underline;
}

h2 {
  font-size: 24px;
  font-weight: var(--header-font-weight);
}

h3 {
  font-size: 18px;
  font-weight: var(--header-font-weight);
}

a {
	color: var(--primary-color)
}

a:visited {
	color: var(--black);
}

a:active {
	color:#357b70;
}


a:hover, a:focus {
	text-decoration: none;
	/* no underline if hovering over link*/
}

button,
.cv-button,
.buttons {
	border: none;
	display: inline-block;
	font-family: inherit;
	/* makes the button use font from outer container*/
	background-color: var(--primary-color);
	color: var(--white);
	text-decoration: none;
	padding: 10px;
	border-radius: 3px;
	/*ADDS SPACING TO BUTTON*/
	border-bottom: 2px solid rgba(0,0,0,0.3);
	/*gives button a bottom border with width of 2px , type of solid and color in RGBA
	Last number (A for ALpha) is how opaque you want it. 1 = complete opaque; 0 = clear.
	*/

	transition: 0.2s opacity;
}

button:hover,
button:focus,
.buttons:hover,
.buttons:focus,
.cv-button:hover,
.cv-button:focus {
	cursor: pointer;
	opacity: .8;
	/* reduces opacity to 80%*/
}


.button_secondary {
	background-color: #e0b354;
	color: var(--dark-grey);
}

#default-link {
	background-color: var(--secondary-color);
}
 /* this is how i stopped the two colors from overlaying. is there a better way?  */


.navigation-list_item--active{
	text-decoration: none;
}


.profile_portrait {
	float: left;
	width: 250px;
	height: auto;
	margin-right: 40px;
	border-radius: 50%;
}

.profile,
.main-about,
.main-work,
.main-contact {
	max-width: 700px;
	margin: 0 auto;
	text-align: center;
}

.page-footer {
	clear: both;
	display: flex;
	flex-direction: column;
	text-align: center;
}

.page-header {
	display: flex;
	width: 100%;
	padding: 20px;
}

.pager-header_item {
	flex: 0 1 200px;
}


.page-header .page-header_item:last-child {
	flex-grow: 1;
	text-align: right;

}

.navigation-list {
	list-style-type: none;
}

.navigation-list li {
	display: inline-block;
	margin-left: 15px;
}


.project-list_item {
	display: inline-block;
	width: 33%;
}
/* ^^ grid fall back !!! */
@supports (display: grid) {

	.project-list {
		display: grid;
		grid-template-columns: 1fr 1fr 1fr;
		grid-gap: 20px;
		margin: 0;
	}

	.project-list_item {
		background-color: lightgray;
		padding: 10px;
		width: auto;
		min-height: auto;
		margin: 0;
	}

	.project-list_item:last-child {
		grid-column: 3 / 3;
		grid-row: 1 / 3;
	}

}

.buttons {
	padding: var(--button-table-pad);
}


.skilltable {
	padding: var(--button-table-pad);
}

/* svg picture = .sun, .cloud-front, .cloud-back
below is CSS animation example*/

@keyframes color-change {
	0% {
		fill: #edc655;
	}
	50% {
		fill: #fcffad;
	}
	100% {
		fill: #f76414;
	}
}

/* @KEYFRAMES -- tells CSS animation is occuring;
   instead of  % ( can use to and from)
*/


.sun {
	animation-duration: 4s;
	animation-name: color-change;
	animation-iteration-count: infinite;
	animation-direction: alternate;
	animation-timing-function: linear;
}

/*
    can also be written in one line!

	.sun {
	animation: 4s color-change infinite alternate linear;
	}
*/

@keyframes cloud-move {
	from {
		transform: translate(0, 50px);
	}
	to {
		transform: translate(200px, 50px);
	}
}

.cloud-front {
	animation: 30s cloud-move infinite alternate linear;
}

@keyframes cloud-move-reverse {
	from {
		transform: translate(446px, 48px);
	}
	to {
		transform: translate(100px, 48px);
	}
}

.cloud-back {
	animation: 34s cloud-move-reverse infinite alternate linear;
}



@media all and (max-width: 500px) {
	.project-list {
		grid-template-columns: 1fr;
	}
}


@media all and (min-width: 500px) and (max-width: 750px) {
	.project-list {
		grid-template-columns: 1fr 1fr;
	}
}

@media all and (max-width: 750px) {
	.project-list {
		grid-gap: 10px;
	}
	.project-list_item:last-child {
		grid-column: auto / auto;
		grid-row: auto / auto;
	}

	h1 {
		font-size: 22px;
	}
}
